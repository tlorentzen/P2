// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TorPdosGuiTest
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {

        /// <summary>
        /// Goes from first start up to succesfull login
        /// </summary>
        public void GUIStartUpLogin()
        {
            #region Variable Declarations
            WinWindow uIBrowseWindow = this.UITorPdosWindow.UITorPdosClient.UIBrowseWindow;
            WinTree uITræstrukturTree = this.UIAngivenmappeWindow.UITræstrukturWindow.UITræstrukturTree;
            WinButton uIOKButton = this.UIAngivenmappeWindow.UIOKWindow.UIOKButton;
            WinWindow uIOkayWindow = this.UITorPdosWindow.UITorPdosClient.UIOkayWindow;
            WinWindow uIItemWindow = this.UITorPdosWindow.UITorPdosClient.UIItemWindow;
            WinEdit uIPasswordEdit = this.UITorPdosWindow.UITorPdosClient.UIPasswordEdit;
            WinWindow uICreateWindow = this.UITorPdosWindow.UITorPdosClient.UICreateWindow;
            WinWindow uILoginWindow = this.UITorPdosWindow.UITorPdosClient.UILoginWindow;
            WinWindow uIPasswordWindow = this.UITorPdosWindow.UITorPdosClient.UIPasswordWindow;
            WinButton uILukButton = this.UIDFilerDokumenterSoftWindow.UIDFilerDokumenterSoftTitleBar.UILukButton;
            #endregion

            // Click 'Browse' window
            Mouse.Click(uIBrowseWindow, new Point(373, 164));

            // Click 'Træstruktur' tree
            Mouse.Click(uITræstrukturTree, new Point(165, 207));

            // Click 'Træstruktur' tree
            Mouse.Click(uITræstrukturTree, new Point(185, 198));

            // Click 'Træstruktur' tree
            Mouse.Click(uITræstrukturTree, new Point(211, 234));

            // Click 'Træstruktur' tree
            Mouse.Click(uITræstrukturTree, new Point(309, 253));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(58, 15));

            // Click 'Okay' window
            Mouse.Click(uIOkayWindow, new Point(255, 145));

            // Click window
            Mouse.Click(uIItemWindow, new Point(261, 109));

            // Type '********' in 'Password:' text box
            Keyboard.SendKeys(uIPasswordEdit, this.GUIStartUpLoginParams.UIPasswordEditSendKeys, true);

            // Click 'Create' window
            Mouse.Click(uICreateWindow, new Point(358, 150));

            // Click window
            Mouse.Click(uIItemWindow, new Point(268, 120));

            // Type '********' in 'Password:' text box
            Keyboard.SendKeys(uIPasswordEdit, this.GUIStartUpLoginParams.UIPasswordEditSendKeys1, true);

            // Click 'Login' window
            Mouse.Click(uILoginWindow, new Point(358, 157));

            // Move window to 'Password:' window
            uIPasswordWindow.EnsureClickable(new Point(190, 123));
            Mouse.StartDragging(uIItemWindow, new Point(95, 125));
            Mouse.StopDragging(uIPasswordWindow, new Point(190, 123));

            // Type '********' in 'Password:' text box
            Keyboard.SendKeys(uIPasswordEdit, this.GUIStartUpLoginParams.UIPasswordEditSendKeys2, true);

            // Click 'Login' window
            Mouse.Click(uILoginWindow, new Point(293, 158));

            // Click 'Browse' window
            Mouse.Click(uIBrowseWindow, new Point(298, 180));

            // Click 'Træstruktur' tree
            Mouse.Click(uITræstrukturTree, new Point(162, 198));

            // Click 'Træstruktur' tree
            Mouse.Click(uITræstrukturTree, new Point(195, 201));

            // Click 'Træstruktur' tree
            Mouse.Click(uITræstrukturTree, new Point(210, 226));

            // Click 'Træstruktur' tree
            Mouse.Click(uITræstrukturTree, new Point(279, 251));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(59, 22));

            // Click 'Okay' window
            Mouse.Click(uIOkayWindow, new Point(250, 150));

            // Click window
            Mouse.Click(uIItemWindow, new Point(269, 115));

            // Type '********' in 'Password:' text box
            Keyboard.SendKeys(uIPasswordEdit, this.GUIStartUpLoginParams.UIPasswordEditSendKeys3, true);

            // Click 'Create' window
            Mouse.Click(uICreateWindow, new Point(297, 168));

            // Click window
            Mouse.Click(uIItemWindow, new Point(222, 130));

            // Type '********' in 'Password:' text box
            Keyboard.SendKeys(uIPasswordEdit, this.GUIStartUpLoginParams.UIPasswordEditSendKeys4, true);

            // Click 'Login' window
            Mouse.Click(uILoginWindow, new Point(312, 160));

            // Move window to 'Password:' window
            uIPasswordWindow.EnsureClickable(new Point(254, 114));
            Mouse.StartDragging(uIItemWindow, new Point(127, 114));
            Mouse.StopDragging(uIPasswordWindow, new Point(254, 114));

            // Type '********' in 'Password:' text box
            Keyboard.SendKeys(uIPasswordEdit, this.GUIStartUpLoginParams.UIPasswordEditSendKeys5, true);

            // Click 'Login' window
            Mouse.Click(uILoginWindow, new Point(373, 179));

            // Click 'Luk' button
            Mouse.Click(uILukButton, new Point(41, 15));
        }
        
        #region Properties
        public virtual RecordedLoginMethodParams RecordedLoginMethodParams
        {
            get
            {
                if ((this.mRecordedLoginMethodParams == null))
                {
                    this.mRecordedLoginMethodParams = new RecordedLoginMethodParams();
                }
                return this.mRecordedLoginMethodParams;
            }
        }
        
        public virtual GUIStartUpLoginParams GUIStartUpLoginParams
        {
            get
            {
                if ((this.mGUIStartUpLoginParams == null))
                {
                    this.mGUIStartUpLoginParams = new GUIStartUpLoginParams();
                }
                return this.mGUIStartUpLoginParams;
            }
        }
        
        public UITorPdosWindow UITorPdosWindow
        {
            get
            {
                if ((this.mUITorPdosWindow == null))
                {
                    this.mUITorPdosWindow = new UITorPdosWindow();
                }
                return this.mUITorPdosWindow;
            }
        }
        
        public UIAngivenmappeWindow UIAngivenmappeWindow
        {
            get
            {
                if ((this.mUIAngivenmappeWindow == null))
                {
                    this.mUIAngivenmappeWindow = new UIAngivenmappeWindow();
                }
                return this.mUIAngivenmappeWindow;
            }
        }
        
        public UIDFilerDokumenterSoftWindow UIDFilerDokumenterSoftWindow
        {
            get
            {
                if ((this.mUIDFilerDokumenterSoftWindow == null))
                {
                    this.mUIDFilerDokumenterSoftWindow = new UIDFilerDokumenterSoftWindow();
                }
                return this.mUIDFilerDokumenterSoftWindow;
            }
        }
        #endregion
        
        #region Fields
        private RecordedLoginMethodParams mRecordedLoginMethodParams;
        
        private GUIStartUpLoginParams mGUIStartUpLoginParams;
        
        private UITorPdosWindow mUITorPdosWindow;
        
        private UIAngivenmappeWindow mUIAngivenmappeWindow;
        
        private UIDFilerDokumenterSoftWindow mUIDFilerDokumenterSoftWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedLoginMethod'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class RecordedLoginMethodParams
    {
        
        #region Fields
        /// <summary>
        /// Type '********' in 'Password:' text box
        /// </summary>
        public string UIPasswordEditSendKeys = "QxWkfD/dZHDYgYGXyFHySA==";
        
        /// <summary>
        /// Type '********' in 'Password:' text box
        /// </summary>
        public string UIPasswordEditSendKeys1 = "VizTJybwdLZ2qRLVeEBpVNH/Rkhyzwci";
        
        /// <summary>
        /// Type '********' in 'Password:' text box
        /// </summary>
        public string UIPasswordEditSendKeys2 = "QxWkfD/dZHDYgYGXyFHySA==";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'GUIStartUpLogin'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class GUIStartUpLoginParams
    {
        
        #region Fields
        /// <summary>
        /// Type '********' in 'Password:' text box
        /// </summary>
        public string UIPasswordEditSendKeys = "QxWkfD/dZHDYgYGXyFHySA==";
        
        /// <summary>
        /// Type '********' in 'Password:' text box
        /// </summary>
        public string UIPasswordEditSendKeys1 = "VizTJybwdLZ2qRLVeEBpVNH/Rkhyzwci";
        
        /// <summary>
        /// Type '********' in 'Password:' text box
        /// </summary>
        public string UIPasswordEditSendKeys2 = "QxWkfD/dZHDYgYGXyFHySA==";
        
        /// <summary>
        /// Type '********' in 'Password:' text box
        /// </summary>
        public string UIPasswordEditSendKeys3 = "QxWkfD/dZHDYgYGXyFHySA==";
        
        /// <summary>
        /// Type '********' in 'Password:' text box
        /// </summary>
        public string UIPasswordEditSendKeys4 = "VizTJybwdLZ2qRLVeEBpVNH/Rkhyzwci";
        
        /// <summary>
        /// Type '********' in 'Password:' text box
        /// </summary>
        public string UIPasswordEditSendKeys5 = "QxWkfD/dZHDYgYGXyFHySA==";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITorPdosWindow : WinWindow
    {
        
        public UITorPdosWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "TorPdos";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("TorPdos");
            #endregion
        }
        
        #region Properties
        public UITorPdosClient UITorPdosClient
        {
            get
            {
                if ((this.mUITorPdosClient == null))
                {
                    this.mUITorPdosClient = new UITorPdosClient(this);
                }
                return this.mUITorPdosClient;
            }
        }
        #endregion
        
        #region Fields
        private UITorPdosClient mUITorPdosClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITorPdosClient : WinClient
    {
        
        public UITorPdosClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "TorPdos";
            this.WindowTitles.Add("TorPdos");
            #endregion
        }
        
        #region Properties
        public WinWindow UIBrowseWindow
        {
            get
            {
                if ((this.mUIBrowseWindow == null))
                {
                    this.mUIBrowseWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUIBrowseWindow.SearchProperties[WinWindow.PropertyNames.Name] = "Browse";
                    this.mUIBrowseWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.BUTTON", PropertyExpressionOperator.Contains));
                    this.mUIBrowseWindow.WindowTitles.Add("TorPdos");
                    #endregion
                }
                return this.mUIBrowseWindow;
            }
        }
        
        public WinWindow UIOkayWindow
        {
            get
            {
                if ((this.mUIOkayWindow == null))
                {
                    this.mUIOkayWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUIOkayWindow.SearchProperties[WinWindow.PropertyNames.Name] = "Okay";
                    this.mUIOkayWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.STATIC", PropertyExpressionOperator.Contains));
                    this.mUIOkayWindow.WindowTitles.Add("TorPdos");
                    #endregion
                }
                return this.mUIOkayWindow;
            }
        }
        
        public WinWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUIItemWindow.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Password:";
                    this.mUIItemWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
                    this.mUIItemWindow.WindowTitles.Add("TorPdos");
                    #endregion
                }
                return this.mUIItemWindow;
            }
        }
        
        public WinEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIPasswordEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Password:";
                    this.mUIPasswordEdit.WindowTitles.Add("TorPdos");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        
        public WinWindow UICreateWindow
        {
            get
            {
                if ((this.mUICreateWindow == null))
                {
                    this.mUICreateWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUICreateWindow.SearchProperties[WinWindow.PropertyNames.Name] = "Create";
                    this.mUICreateWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.BUTTON", PropertyExpressionOperator.Contains));
                    this.mUICreateWindow.WindowTitles.Add("TorPdos");
                    #endregion
                }
                return this.mUICreateWindow;
            }
        }
        
        public WinWindow UILoginWindow
        {
            get
            {
                if ((this.mUILoginWindow == null))
                {
                    this.mUILoginWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUILoginWindow.SearchProperties[WinWindow.PropertyNames.Name] = "Login";
                    this.mUILoginWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.BUTTON", PropertyExpressionOperator.Contains));
                    this.mUILoginWindow.WindowTitles.Add("TorPdos");
                    #endregion
                }
                return this.mUILoginWindow;
            }
        }
        
        public WinWindow UIPasswordWindow
        {
            get
            {
                if ((this.mUIPasswordWindow == null))
                {
                    this.mUIPasswordWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUIPasswordWindow.SearchProperties[WinWindow.PropertyNames.Name] = "Password:";
                    this.mUIPasswordWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.STATIC", PropertyExpressionOperator.Contains));
                    this.mUIPasswordWindow.WindowTitles.Add("TorPdos");
                    #endregion
                }
                return this.mUIPasswordWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mUIBrowseWindow;
        
        private WinWindow mUIOkayWindow;
        
        private WinWindow mUIItemWindow;
        
        private WinEdit mUIPasswordEdit;
        
        private WinWindow mUICreateWindow;
        
        private WinWindow mUILoginWindow;
        
        private WinWindow mUIPasswordWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIAngivenmappeWindow : WinWindow
    {
        
        public UIAngivenmappeWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Angiv en mappe";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Angiv en mappe");
            #endregion
        }
        
        #region Properties
        public UITræstrukturWindow UITræstrukturWindow
        {
            get
            {
                if ((this.mUITræstrukturWindow == null))
                {
                    this.mUITræstrukturWindow = new UITræstrukturWindow(this);
                }
                return this.mUITræstrukturWindow;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UITræstrukturWindow mUITræstrukturWindow;
        
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITræstrukturWindow : WinWindow
    {
        
        public UITræstrukturWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Angiv en mappe");
            #endregion
        }
        
        #region Properties
        public WinTree UITræstrukturTree
        {
            get
            {
                if ((this.mUITræstrukturTree == null))
                {
                    this.mUITræstrukturTree = new WinTree(this);
                    #region Search Criteria
                    this.mUITræstrukturTree.WindowTitles.Add("Angiv en mappe");
                    #endregion
                }
                return this.mUITræstrukturTree;
            }
        }
        #endregion
        
        #region Fields
        private WinTree mUITræstrukturTree;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Angiv en mappe");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Angiv en mappe");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDFilerDokumenterSoftWindow : WinWindow
    {
        
        public UIDFilerDokumenterSoftWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "D:\\Filer\\Dokumenter\\Software bøger\\2. semester\\Projekt\\P2\\TorPdos\\TorPdos\\bin\\Deb" +
                "ug\\TorPdos.exe";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "ConsoleWindowClass";
            this.WindowTitles.Add("D:\\Filer\\Dokumenter\\Software bøger\\2. semester\\Projekt\\P2\\TorPdos\\TorPdos\\bin\\Deb" +
                    "ug\\TorPdos.exe");
            #endregion
        }
        
        #region Properties
        public UIDFilerDokumenterSoftTitleBar UIDFilerDokumenterSoftTitleBar
        {
            get
            {
                if ((this.mUIDFilerDokumenterSoftTitleBar == null))
                {
                    this.mUIDFilerDokumenterSoftTitleBar = new UIDFilerDokumenterSoftTitleBar(this);
                }
                return this.mUIDFilerDokumenterSoftTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIDFilerDokumenterSoftTitleBar mUIDFilerDokumenterSoftTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDFilerDokumenterSoftTitleBar : WinTitleBar
    {
        
        public UIDFilerDokumenterSoftTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("D:\\Filer\\Dokumenter\\Software bøger\\2. semester\\Projekt\\P2\\TorPdos\\TorPdos\\bin\\Deb" +
                    "ug\\TorPdos.exe");
            #endregion
        }
        
        #region Properties
        public WinButton UILukButton
        {
            get
            {
                if ((this.mUILukButton == null))
                {
                    this.mUILukButton = new WinButton(this);
                    #region Search Criteria
                    this.mUILukButton.SearchProperties[WinButton.PropertyNames.Name] = "Luk";
                    this.mUILukButton.WindowTitles.Add("D:\\Filer\\Dokumenter\\Software bøger\\2. semester\\Projekt\\P2\\TorPdos\\TorPdos\\bin\\Deb" +
                            "ug\\TorPdos.exe");
                    #endregion
                }
                return this.mUILukButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUILukButton;
        #endregion
    }
}
